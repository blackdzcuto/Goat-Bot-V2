var ⵒⴵⵗⴵⴱ = ⵒⴵⵗⴵⴱ || {};
ⵒⴵⵗⴵⴱ.scope = {};
ⵒⴵⵗⴵⴱ.createTemplateTagFirstArg = function (ⵂⵐⵚⴵⴱ) {
  return ⵂⵐⵚⴵⴱ.raw = ⵂⵐⵚⴵⴱ;
};
ⵒⴵⵗⴵⴱ.createTemplateTagFirstArgWithRaw = function (ⵂⴰⵐⴵⴱ, ⴲⵋⵓⴵⴱ) {
  ⵂⴰⵐⴵⴱ.raw = ⴲⵋⵓⴵⴱ;
  return ⵂⴰⵐⴵⴱ;
};
ⵒⴵⵗⴵⴱ.arrayIteratorImpl = function (ⴲⵛⵈⴵⴱ) {
  var ⵒⵅⵌⴵⴱ = 0;
  return function () {
    if (ⵒⵅⵌⴵⴱ < ⴲⵛⵈⴵⴱ.length) {
      return {
        done: false,
        value: ⴲⵛⵈⴵⴱ[ⵒⵅⵌⴵⴱ++]
      };
    } else {
      return {
        done: true
      };
    }
  };
};
ⵒⴵⵗⴵⴱ.arrayIterator = function (ⵒⵕⵁⴵⴱ) {
  return {
    next: ⵒⴵⵗⴵⴱ.arrayIteratorImpl(ⵒⵕⵁⴵⴱ)
  };
};
ⵒⴵⵗⴵⴱ.makeIterator = function (ⵂⵀⵅⴵⴱ) {
  var ⴲⵋⵃⴶⴱ = typeof Symbol != "undefined" && Symbol.iterator && ⵂⵀⵅⴵⴱ[Symbol.iterator];
  var ⵒⴵⵇⴶⴱ = 10;
  while (ⵒⴵⵇⴶⴱ < 25) {
    switch (ⵒⴵⵇⴶⴱ) {
      case 24:
        ⵒⴵⵇⴶⴱ = 25;
        return ⴲⵋⵃⴶⴱ.call(ⵂⵀⵅⴵⴱ);
      case 10:
        ⵒⴵⵇⴶⴱ = ⴲⵋⵃⴶⴱ ? 24 : 25;
        break;
    }
  }
  var ⵒⵅⴼⴶⴱ = 29;
  while (ⵒⵅⴼⴶⴱ < 35) {
    switch (ⵒⵅⴼⴶⴱ) {
      case 29:
        ⵒⵅⴼⴶⴱ = typeof ⵂⵀⵅⴵⴱ.length == "number" ? 19 : 35;
        break;
      case 19:
        ⵒⵅⴼⴶⴱ = 35;
        return ⵒⴵⵗⴵⴱ.arrayIterator(ⵂⵀⵅⴵⴱ);
    }
  }
  throw Error(String(ⵂⵀⵅⴵⴱ) + " is not an iterable or ArrayLike");
};
ⵒⴵⵗⴵⴱ.arrayFromIterator = function (ⵂⴰⵀⴶⴱ) {
  var ⵂⵀⴵⴶⴱ = 31;
  while (ⵂⵀⴵⴶⴱ < 36) {
    switch (ⵂⵀⴵⴶⴱ) {
      case 12:
        ⵂⵀⴵⴶⴱ = !(ⴲⵛⴸⴶⴱ = ⵂⴰⵀⴶⴱ.next()).done ? 15 : 36;
        break;
      case 31:
        ⵂⵀⴵⴶⴱ = 12;
        var ⴲⵛⴸⴶⴱ;
        var ⴲⴻⵞⴵⴱ = [];
        break;
      case 15:
        ⵂⵀⴵⴶⴱ = 12;
        ⴲⴻⵞⴵⴱ.push(ⴲⵛⴸⴶⴱ.value);
        break;
    }
  }
  return ⴲⴻⵞⴵⴱ;
};
ⵒⴵⵗⴵⴱ.arrayFromIterable = function (ⵒⵕⴱⴶⴱ) {
  if (ⵒⵕⴱⴶⴱ instanceof Array) {
    return ⵒⵕⴱⴶⴱ;
  } else {
    return ⵒⴵⵗⴵⴱ.arrayFromIterator(ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵕⴱⴶⴱ));
  }
};
ⵒⴵⵗⴵⴱ.owns = function (ⵒⵅⴼⴲⴱ, ⵂⴰⵀⴲⴱ) {
  return Object.prototype.hasOwnProperty.call(ⵒⵅⴼⴲⴱ, ⵂⴰⵀⴲⴱ);
};
ⵒⴵⵗⴵⴱ.ASSUME_ES5 = false;
ⵒⴵⵗⴵⴱ.ASSUME_NO_NATIVE_MAP = false;
ⵒⴵⵗⴵⴱ.ASSUME_NO_NATIVE_SET = false;
ⵒⴵⵗⴵⴱ.SIMPLE_FROUND_POLYFILL = false;
ⵒⴵⵗⴵⴱ.ISOLATE_POLYFILLS = false;
ⵒⴵⵗⴵⴱ.FORCE_POLYFILL_PROMISE = false;
ⵒⴵⵗⴵⴱ.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = false;
ⵒⴵⵗⴵⴱ.defineProperty = ⵒⴵⵗⴵⴱ.ASSUME_ES5 || typeof Object.defineProperties == "function" ? Object.defineProperty : function (ⵂⵀⴵⴲⴱ, ⴲⵛⴸⴲⴱ, ⴲⴻⵞⴱⴱ) {
  var ⵒⵕⴱⴲⴱ = 13;
  while (ⵒⵕⴱⴲⴱ < 30) {
    switch (ⵒⵕⴱⴲⴱ) {
      case 29:
        ⵒⵕⴱⴲⴱ = 30;
        return ⵂⵀⴵⴲⴱ;
      case 13:
        ⵒⵕⴱⴲⴱ = ⵂⵀⴵⴲⴱ == Array.prototype || ⵂⵀⴵⴲⴱ == Object.prototype ? 29 : 30;
        break;
    }
  }
  ⵂⵀⴵⴲⴱ[ⴲⵛⴸⴲⴱ] = ⴲⴻⵞⴱⴱ.value;
  return ⵂⵀⴵⴲⴱ;
};
ⵒⴵⵗⴵⴱ.getGlobal = function (ⵒⴵⵗⴱⴱ) {
  ⵒⴵⵗⴱⴱ = [typeof globalThis == "object" && globalThis, ⵒⴵⵗⴱⴱ, typeof window == "object" && window, typeof self == "object" && self, typeof global == "object" && global];
  var ⵂⵐⵚⴱⴱ = 34;
  while (ⵂⵐⵚⴱⴱ < 35) {
    switch (ⵂⵐⵚⴱⴱ) {
      case 14:
        ⵂⵐⵚⴱⴱ = 10;
        ++ⵒⵕⵑⴲⴱ;
        break;
      case 24:
        ⵂⵐⵚⴱⴱ = 14;
        {
          var ⴲⵛⵘⴲⴱ = ⵒⴵⵗⴱⴱ[ⵒⵕⵑⴲⴱ];
          var ⵒⵅⵜⴲⴱ = 34;
          while (ⵒⵅⵜⴲⴱ < 35) {
            switch (ⵒⵅⵜⴲⴱ) {
              case 34:
                ⵒⵅⵜⴲⴱ = ⴲⵛⵘⴲⴱ && ⴲⵛⵘⴲⴱ.Math == Math ? 10 : 35;
                break;
              case 10:
                ⵒⵅⵜⴲⴱ = 35;
                return ⴲⵛⵘⴲⴱ;
            }
          }
        }
        break;
      case 10:
        ⵂⵐⵚⴱⴱ = ⵒⵕⵑⴲⴱ < ⵒⴵⵗⴱⴱ.length ? 24 : 35;
        break;
      case 34:
        ⵂⵐⵚⴱⴱ = 10;
        var ⵒⵕⵑⴲⴱ = 0;
        break;
    }
  }
  throw Error("Cannot find global object");
};
ⵒⴵⵗⴵⴱ.global = ⵒⴵⵗⴵⴱ.getGlobal(this);
ⵒⴵⵗⴵⴱ.IS_SYMBOL_NATIVE = typeof Symbol === "function" && typeof Symbol("x") === "symbol";
ⵒⴵⵗⴵⴱ.TRUST_ES6_POLYFILLS = !ⵒⴵⵗⴵⴱ.ISOLATE_POLYFILLS || ⵒⴵⵗⴵⴱ.IS_SYMBOL_NATIVE;
ⵒⴵⵗⴵⴱ.polyfills = {};
ⵒⴵⵗⴵⴱ.propertyToPolyfillSymbol = {};
ⵒⴵⵗⴵⴱ.POLYFILL_PREFIX = "$jscp$";
function ⵂⵀⵕⴲⴱ(ⵂⵐⵊⴲⴱ, ⴲⴻⵎⴲⴱ, ⴲⵋⵃⴲⴱ) {
  var ⵒⴵⵇⴲⴱ = 13;
  while (ⵒⴵⵇⴲⴱ < 30) {
    switch (ⵒⴵⵇⴲⴱ) {
      case 29:
        ⵒⴵⵇⴲⴱ = 30;
        {
          ⴲⵋⵃⴲⴱ = ⵒⴵⵗⴵⴱ.propertyToPolyfillSymbol[ⴲⴻⵎⴲⴱ];
          var ⵂⵀⵅⴳⴱ = 31;
          while (ⵂⵀⵅⴳⴱ < 34) {
            switch (ⵂⵀⵅⴳⴱ) {
              case 12:
                ⵂⵀⵅⴳⴱ = 34;
                return ⵂⵐⵊⴲⴱ[ⴲⴻⵎⴲⴱ];
              case 31:
                ⵂⵀⵅⴳⴱ = ⴲⵋⵃⴲⴱ == null ? 12 : 34;
                break;
            }
          }
          ⴲⵋⵃⴲⴱ = ⵂⵐⵊⴲⴱ[ⴲⵋⵃⴲⴱ];
          if (ⴲⵋⵃⴲⴱ !== undefined) {
            return ⴲⵋⵃⴲⴱ;
          } else {
            return ⵂⵐⵊⴲⴱ[ⴲⴻⵎⴲⴱ];
          }
        }
        break;
      case 13:
        ⵒⴵⵇⴲⴱ = !ⴲⵋⵃⴲⴱ || ⵂⵐⵊⴲⴱ != null ? 29 : 30;
        break;
    }
  }
}
ⵒⴵⵗⴵⴱ.polyfill = function (ⴲⵛⵈⴳⴱ, ⴲⴻⴾⴳⴱ, ⵒⵕⵁⴳⴱ, ⵒⴵⴷⴳⴱ) {
  if (ⴲⴻⴾⴳⴱ) {
    if (ⵒⴵⵗⴵⴱ.ISOLATE_POLYFILLS) {
      ⵒⴵⵗⴵⴱ.polyfillIsolated(ⴲⵛⵈⴳⴱ, ⴲⴻⴾⴳⴱ, ⵒⵕⵁⴳⴱ, ⵒⴵⴷⴳⴱ);
    } else {
      ⵒⴵⵗⴵⴱ.polyfillUnisolated(ⴲⵛⵈⴳⴱ, ⴲⴻⴾⴳⴱ, ⵒⵕⵁⴳⴱ, ⵒⴵⴷⴳⴱ);
    }
  }
};
ⵒⴵⵗⴵⴱ.polyfillUnisolated = function (ⵂⵐⴺⴳⴱ, ⵂⴰⴰⴳⴱ, ⴲⵋⴳⴳⴱ, ⵒⵕⴱⴴⴱ) {
  ⴲⵋⴳⴳⴱ = ⵒⴵⵗⴵⴱ.global;
  ⵂⵐⴺⴳⴱ = ⵂⵐⴺⴳⴱ.split(".");
  var ⵂⵀⴵⴴⴱ = 19;
  while (ⵂⵀⴵⴴⴱ < 35) {
    switch (ⵂⵀⴵⴴⴱ) {
      case 10:
        ⵂⵀⴵⴴⴱ = 18;
        ⵒⵕⴱⴴⴱ++;
        break;
      case 19:
        ⵂⵀⴵⴴⴱ = 18;
        ⵒⵕⴱⴴⴱ = 0;
        break;
      case 34:
        ⵂⵀⴵⴴⴱ = 10;
        {
          var ⵂⵐⵚⴳⴱ = ⵂⵐⴺⴳⴱ[ⵒⵕⴱⴴⴱ];
          var ⴲⴻⵞⴳⴱ = 33;
          while (ⴲⴻⵞⴳⴱ < 36) {
            switch (ⴲⴻⵞⴳⴱ) {
              case 33:
                ⴲⴻⵞⴳⴱ = !(ⵂⵐⵚⴳⴱ in ⴲⵋⴳⴳⴱ) ? 35 : 36;
                break;
              case 35:
                ⴲⴻⵞⴳⴱ = 36;
                return;
            }
          }
          ⴲⵋⴳⴳⴱ = ⴲⵋⴳⴳⴱ[ⵂⵐⵚⴳⴱ];
        }
        break;
      case 18:
        ⵂⵀⴵⴴⴱ = ⵒⵕⴱⴴⴱ < ⵂⵐⴺⴳⴱ.length - 1 ? 34 : 35;
        break;
    }
  }
  ⵂⵐⴺⴳⴱ = ⵂⵐⴺⴳⴱ[ⵂⵐⴺⴳⴱ.length - 1];
  ⵒⵕⴱⴴⴱ = ⴲⵋⴳⴳⴱ[ⵂⵐⴺⴳⴱ];
  ⵂⴰⴰⴳⴱ = ⵂⴰⴰⴳⴱ(ⵒⵕⴱⴴⴱ);
  if (ⵂⴰⴰⴳⴱ != ⵒⵕⴱⴴⴱ && ⵂⴰⴰⴳⴱ != null) {
    ⵒⴵⵗⴵⴱ.defineProperty(ⴲⵋⴳⴳⴱ, ⵂⵐⴺⴳⴱ, {
      configurable: true,
      writable: true,
      value: ⵂⴰⴰⴳⴱ
    });
  }
};
ⵒⴵⵗⴵⴱ.polyfillIsolated = function (ⴲⵋⵓⴳⴱ, ⵒⴵⵗⴳⴱ, ⵒⵅⵌⴳⴱ, ⵂⴰⵐⴳⴱ) {
  var ⵂⵐⵚⵟ = ⴲⵋⵓⴳⴱ.split(".");
  ⴲⵋⵓⴳⴱ = ⵂⵐⵚⵟ.length === 1;
  ⵂⴰⵐⴳⴱ = ⵂⵐⵚⵟ[0];
  ⵂⴰⵐⴳⴱ = !ⴲⵋⵓⴳⴱ && ⵂⴰⵐⴳⴱ in ⵒⴵⵗⴵⴱ.polyfills ? ⵒⴵⵗⴵⴱ.polyfills : ⵒⴵⵗⴵⴱ.global;
  var ⴲⴻⵞⵟ = 29;
  while (ⴲⴻⵞⵟ < 35) {
    switch (ⴲⴻⵞⵟ) {
      case 19:
        ⴲⴻⵞⵟ = ⴲⵋⵓⵟ < ⵂⵐⵚⵟ.length - 1 ? 18 : 35;
        break;
      case 29:
        ⴲⴻⵞⵟ = 19;
        var ⴲⵋⵓⵟ = 0;
        break;
      case 18:
        ⴲⴻⵞⵟ = 34;
        {
          var ⵒⴵⵗⵟ = ⵂⵐⵚⵟ[ⴲⵋⵓⵟ];
          var ⵒⵅⵌⵟ = 18;
          while (ⵒⵅⵌⵟ < 35) {
            switch (ⵒⵅⵌⵟ) {
              case 18:
                ⵒⵅⵌⵟ = !(ⵒⴵⵗⵟ in ⵂⴰⵐⴳⴱ) ? 34 : 35;
                break;
              case 34:
                ⵒⵅⵌⵟ = 35;
                return;
            }
          }
          ⵂⴰⵐⴳⴱ = ⵂⴰⵐⴳⴱ[ⵒⴵⵗⵟ];
        }
        break;
      case 34:
        ⴲⴻⵞⵟ = 19;
        ⴲⵋⵓⵟ++;
        break;
    }
  }
  ⵂⵐⵚⵟ = ⵂⵐⵚⵟ[ⵂⵐⵚⵟ.length - 1];
  ⵒⵅⵌⴳⴱ = ⵒⴵⵗⴵⴱ.IS_SYMBOL_NATIVE && ⵒⵅⵌⴳⴱ === "es6" ? ⵂⴰⵐⴳⴱ[ⵂⵐⵚⵟ] : null;
  ⵒⴵⵗⴳⴱ = ⵒⴵⵗⴳⴱ(ⵒⵅⵌⴳⴱ);
  if (ⵒⴵⵗⴳⴱ != null) {
    if (ⴲⵋⵓⴳⴱ) {
      ⵒⴵⵗⴵⴱ.defineProperty(ⵒⴵⵗⴵⴱ.polyfills, ⵂⵐⵚⵟ, {
        configurable: true,
        writable: true,
        value: ⵒⴵⵗⴳⴱ
      });
    } else if (ⵒⴵⵗⴳⴱ !== ⵒⵅⵌⴳⴱ) {
      if (ⵒⴵⵗⴵⴱ.propertyToPolyfillSymbol[ⵂⵐⵚⵟ] === undefined) {
        ⵒⵅⵌⴳⴱ = Math.random() * 1000000000 >>> 0;
        ⵒⴵⵗⴵⴱ.propertyToPolyfillSymbol[ⵂⵐⵚⵟ] = ⵒⴵⵗⴵⴱ.IS_SYMBOL_NATIVE ? ⵒⴵⵗⴵⴱ.global.Symbol(ⵂⵐⵚⵟ) : ⵒⴵⵗⴵⴱ.POLYFILL_PREFIX + ⵒⵅⵌⴳⴱ + "$" + ⵂⵐⵚⵟ;
      }
      ⵒⴵⵗⴵⴱ.defineProperty(ⵂⴰⵐⴳⴱ, ⵒⴵⵗⴵⴱ.propertyToPolyfillSymbol[ⵂⵐⵚⵟ], {
        configurable: true,
        writable: true,
        value: ⵒⴵⵗⴳⴱ
      });
    }
  }
};
ⵒⴵⵗⴵⴱ.assign = ⵒⴵⵗⴵⴱ.TRUST_ES6_POLYFILLS && typeof Object.assign == "function" ? Object.assign : function (ⵂⴰⵐⵟ, ⵂⵀⵅⵟ) {
  var ⴲⵛⵈⵟ = 32;
  while (ⴲⵛⵈⵟ < 33) {
    switch (ⴲⵛⵈⵟ) {
      case 20:
        ⴲⵛⵈⵟ = 23;
        {
          var ⵒⴵⵇⴰⴱ = arguments[ⴲⵋⵃⴰⴱ];
          var ⵂⵐⵊⴰⴱ = 18;
          while (ⵂⵐⵊⴰⴱ < 35) {
            switch (ⵂⵐⵊⴰⴱ) {
              case 34:
                ⵂⵐⵊⴰⴱ = 35;
                for (var ⵂⴰⵀⴰⴱ in ⵒⴵⵇⴰⴱ) {
                  if (ⵒⴵⵗⴵⴱ.owns(ⵒⴵⵇⴰⴱ, ⵂⴰⵀⴰⴱ)) {
                    ⵂⴰⵐⵟ[ⵂⴰⵀⴰⴱ] = ⵒⴵⵇⴰⴱ[ⵂⴰⵀⴰⴱ];
                  }
                }
                break;
              case 18:
                ⵂⵐⵊⴰⴱ = ⵒⴵⵇⴰⴱ ? 34 : 35;
                break;
            }
          }
        }
        break;
      case 25:
        ⴲⵛⵈⵟ = ⴲⵋⵃⴰⴱ < arguments.length ? 20 : 33;
        break;
      case 32:
        ⴲⵛⵈⵟ = 25;
        var ⴲⵋⵃⴰⴱ = 1;
        break;
      case 23:
        ⴲⵛⵈⵟ = 25;
        ⴲⵋⵃⴰⴱ++;
        break;
    }
  }
  return ⵂⴰⵐⵟ;
};
ⵒⴵⵗⴵⴱ.polyfill("Object.assign", function (ⴲⵛⴸⴰⴱ) {
  return ⴲⵛⴸⴰⴱ || ⵒⴵⵗⴵⴱ.assign;
}, "es6", "es3");
ⵒⴵⵗⴵⴱ.underscoreProtoCanBeSet = function () {
  var ⵒⵅⴼⴰⴱ = {
    a: true
  };
  var ⵒⵕⴱⴰⴱ = {};
  try {
    ⵒⵕⴱⴰⴱ.__proto__ = ⵒⵅⴼⴰⴱ;
    return ⵒⵕⴱⴰⴱ.a;
  } catch (ⵂⵀⴵⴰⴱ) {}
  return false;
};
ⵒⴵⵗⴵⴱ.setPrototypeOf = ⵒⴵⵗⴵⴱ.TRUST_ES6_POLYFILLS && typeof Object.setPrototypeOf == "function" ? Object.setPrototypeOf : ⵒⴵⵗⴵⴱ.underscoreProtoCanBeSet() ? function (ⴲⵋⴳⴱⴱ, ⵒⴵⴷⴱⴱ) {
  ⴲⵋⴳⴱⴱ.__proto__ = ⵒⴵⴷⴱⴱ;
  var ⵒⵅⵜⴰⴱ = 29;
  while (ⵒⵅⵜⴰⴱ < 35) {
    switch (ⵒⵅⵜⴰⴱ) {
      case 19:
        ⵒⵅⵜⴰⴱ = 35;
        throw new TypeError(ⴲⵋⴳⴱⴱ + " is not extensible");
      case 29:
        ⵒⵅⵜⴰⴱ = ⴲⵋⴳⴱⴱ.__proto__ !== ⵒⴵⴷⴱⴱ ? 19 : 35;
        break;
    }
  }
  return ⴲⵋⴳⴱⴱ;
} : null;
ⵒⴵⵗⴵⴱ.generator = {};
ⵒⴵⵗⴵⴱ.generator.ensureIteratorResultIsObject_ = function (ⵂⴰⴰⴱⴱ) {
  var ⵂⵀⵕⴰⴱ = 17;
  while (ⵂⵀⵕⴰⴱ < 32) {
    switch (ⵂⵀⵕⴰⴱ) {
      case 31:
        ⵂⵀⵕⴰⴱ = 32;
        throw new TypeError("Iterator result " + ⵂⴰⴰⴱⴱ + " is not an object");
      case 17:
        ⵂⵀⵕⴰⴱ = !(ⵂⴰⴰⴱⴱ instanceof Object) ? 31 : 32;
        break;
    }
  }
};
ⵒⴵⵗⴵⴱ.generator.Context = function () {
  this.isRunning_ = false;
  this.yieldAllIterator_ = null;
  this.yieldResult = undefined;
  this.nextAddress = 1;
  this.finallyAddress_ = this.catchAddress_ = 0;
  this.finallyContexts_ = this.abruptCompletion_ = null;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.start_ = function () {
  var ⴲⵛⵘⴰⴱ = 34;
  while (ⴲⵛⵘⴰⴱ < 35) {
    switch (ⴲⵛⵘⴰⴱ) {
      case 10:
        ⴲⵛⵘⴰⴱ = 35;
        throw new TypeError("Generator is already running");
      case 34:
        ⴲⵛⵘⴰⴱ = this.isRunning_ ? 10 : 35;
        break;
    }
  }
  this.isRunning_ = true;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.stop_ = function () {
  this.isRunning_ = false;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.jumpToErrorHandler_ = function () {
  this.nextAddress = this.catchAddress_ || this.finallyAddress_;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.next_ = function (ⴲⴻⵎⴰⴱ) {
  this.yieldResult = ⴲⴻⵎⴰⴱ;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.throw_ = function (ⵒⵕⵑⴰⴱ) {
  this.abruptCompletion_ = {
    exception: ⵒⵕⵑⴰⴱ,
    isException: true
  };
  this.jumpToErrorHandler_();
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.return = function (ⵂⴰⵐⴱⴱ) {
  this.abruptCompletion_ = {
    return: ⵂⴰⵐⴱⴱ
  };
  this.nextAddress = this.finallyAddress_;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.jumpThroughFinallyBlocks = function (ⴲⵋⵓⴱⴱ) {
  this.abruptCompletion_ = {
    jumpTo: ⴲⵋⵓⴱⴱ
  };
  this.nextAddress = this.finallyAddress_;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.yield = function (ⴲⵛⵈⴱⴱ, ⵒⵅⵌⴱⴱ) {
  this.nextAddress = ⵒⵅⵌⴱⴱ;
  return {
    value: ⴲⵛⵈⴱⴱ
  };
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.yieldAll = function (ⵒⵕⵁⴱⴱ, ⵂⵀⵅⴱⴱ) {
  var ⵂⵐⴺⴱⴱ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵕⵁⴱⴱ);
  var ⴲⴻⴾⴱⴱ = ⵂⵐⴺⴱⴱ.next();
  ⵒⴵⵗⴵⴱ.generator.ensureIteratorResultIsObject_(ⴲⴻⴾⴱⴱ);
  var ⴲⵛⵈⵝ = 27;
  while (ⴲⵛⵈⵝ < 32) {
    switch (ⴲⵛⵈⵝ) {
      case 31:
        ⴲⵛⵈⵝ = 32;
        this.yieldAllIterator_ = ⵂⵐⴺⴱⴱ;
        return this.yield(ⴲⴻⴾⴱⴱ.value, ⵂⵀⵅⴱⴱ);
      case 17:
        ⴲⵛⵈⵝ = 32;
        this.yieldResult = ⴲⴻⴾⴱⴱ.value;
        this.nextAddress = ⵂⵀⵅⴱⴱ;
        break;
      case 27:
        ⴲⵛⵈⵝ = ⴲⴻⴾⴱⴱ.done ? 17 : 31;
        break;
    }
  }
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.jumpTo = function (ⵒⵅⵌⵝ) {
  this.nextAddress = ⵒⵅⵌⵝ;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.jumpToEnd = function () {
  this.nextAddress = 0;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.setCatchFinallyBlocks = function (ⵒⵕⵁⵝ, ⵂⵀⵅⵝ) {
  this.catchAddress_ = ⵒⵕⵁⵝ;
  if (ⵂⵀⵅⵝ != undefined) {
    this.finallyAddress_ = ⵂⵀⵅⵝ;
  }
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.setFinallyBlock = function (ⵂⵐⴺⵝ) {
  this.catchAddress_ = 0;
  this.finallyAddress_ = ⵂⵐⴺⵝ || 0;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.leaveTryBlock = function (ⴲⴻⴾⵝ, ⴲⵋⴳⵝ) {
  this.nextAddress = ⴲⴻⴾⵝ;
  this.catchAddress_ = ⴲⵋⴳⵝ || 0;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.enterCatchBlock = function (ⵒⴵⴷⵝ) {
  this.catchAddress_ = ⵒⴵⴷⵝ || 0;
  ⵒⴵⴷⵝ = this.abruptCompletion_.exception;
  this.abruptCompletion_ = null;
  return ⵒⴵⴷⵝ;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.enterFinallyBlock = function (ⵂⵀⴵⵞ, ⴲⵛⴸⵞ, ⴲⴻⵞⵝ) {
  if (ⴲⴻⵞⵝ) {
    this.finallyContexts_[ⴲⴻⵞⵝ] = this.abruptCompletion_;
  } else {
    this.finallyContexts_ = [this.abruptCompletion_];
  }
  this.catchAddress_ = ⵂⵀⴵⵞ || 0;
  this.finallyAddress_ = ⴲⵛⴸⵞ || 0;
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.leaveFinallyBlock = function (ⵒⵕⴱⵞ, ⵒⴵⵗⵝ) {
  var ⵂⵐⵚⵝ = this.finallyContexts_.splice(ⵒⴵⵗⵝ || 0)[0];
  var ⵂⴰⵐⵝ = 25;
  while (ⵂⴰⵐⵝ < 26) {
    switch (ⵂⴰⵐⵝ) {
      case 20:
        ⵂⴰⵐⵝ = 26;
        {
          var ⴲⵋⵓⵝ = 19;
          while (ⴲⵋⵓⵝ < 35) {
            switch (ⴲⵋⵓⵝ) {
              case 18:
                ⴲⵋⵓⵝ = 35;
                return this.jumpToErrorHandler_();
              case 19:
                ⴲⵋⵓⵝ = ⵂⵐⵚⵝ.isException ? 18 : 35;
                break;
            }
          }
          if (ⵂⵐⵚⵝ.jumpTo != undefined && this.finallyAddress_ < ⵂⵐⵚⵝ.jumpTo) {
            this.nextAddress = ⵂⵐⵚⵝ.jumpTo;
            this.abruptCompletion_ = null;
          } else {
            this.nextAddress = this.finallyAddress_;
          }
        }
        break;
      case 23:
        ⵂⴰⵐⵝ = 26;
        this.nextAddress = ⵒⵕⴱⵞ;
        break;
      case 25:
        ⵂⴰⵐⵝ = (ⵂⵐⵚⵝ = this.abruptCompletion_ = this.abruptCompletion_ || ⵂⵐⵚⵝ) ? 20 : 23;
        break;
    }
  }
};
ⵒⴵⵗⴵⴱ.generator.Context.prototype.forIn = function (ⵒⵕⵑⵞ) {
  return new ⵒⴵⵗⴵⴱ.generator.Context.PropertyIterator(ⵒⵕⵑⵞ);
};
ⵒⴵⵗⴵⴱ.generator.Context.PropertyIterator = function (ⵂⵀⵕⵞ) {
  this.object_ = ⵂⵀⵕⵞ;
  this.properties_ = [];
  for (var ⵂⵐⵊⵞ in ⵂⵀⵕⵞ) {
    this.properties_.push(ⵂⵐⵊⵞ);
  }
  this.properties_.reverse();
};
ⵒⴵⵗⴵⴱ.generator.Context.PropertyIterator.prototype.getNext = function () {
  var ⴲⴻⵎⵞ = 33;
  while (ⴲⴻⵎⵞ < 36) {
    switch (ⴲⴻⵎⵞ) {
      case 35:
        ⴲⴻⵎⵞ = 33;
        {
          var ⴲⵋⵃⵞ = this.properties_.pop();
          var ⵒⴵⵇⵞ = 34;
          while (ⵒⴵⵇⵞ < 35) {
            switch (ⵒⴵⵇⵞ) {
              case 34:
                ⵒⴵⵇⵞ = ⴲⵋⵃⵞ in this.object_ ? 10 : 35;
                break;
              case 10:
                ⵒⴵⵇⵞ = 35;
                return ⴲⵋⵃⵞ;
            }
          }
        }
        break;
      case 33:
        ⴲⴻⵎⵞ = this.properties_.length > 0 ? 35 : 36;
        break;
    }
  }
  return null;
};
ⵒⴵⵗⴵⴱ.generator.Engine_ = function (ⵒⵅⴼⵞ) {
  this.context_ = new ⵒⴵⵗⴵⴱ.generator.Context();
  this.program_ = ⵒⵅⴼⵞ;
};
ⵒⴵⵗⴵⴱ.generator.Engine_.prototype.next_ = function (ⵂⴰⵀⵞ) {
  this.context_.start_();
  var ⴲⴻⴾⵟ = 21;
  while (ⴲⴻⴾⵟ < 33) {
    switch (ⴲⴻⴾⵟ) {
      case 32:
        ⴲⴻⴾⵟ = 33;
        return this.yieldAllStep_(this.context_.yieldAllIterator_.next, ⵂⴰⵀⵞ, this.context_.next_);
      case 21:
        ⴲⴻⴾⵟ = this.context_.yieldAllIterator_ ? 32 : 33;
        break;
    }
  }
  this.context_.next_(ⵂⴰⵀⵞ);
  return this.nextStep_();
};
ⵒⴵⵗⴵⴱ.generator.Engine_.prototype.return_ = function (ⵒⵕⵁⵟ) {
  this.context_.start_();
  var ⵒⴵⴷⵟ = this.context_.yieldAllIterator_;
  var ⵂⵐⴺⵟ = 7;
  while (ⵂⵐⴺⵟ < 38) {
    switch (ⵂⵐⴺⵟ) {
      case 7:
        ⵂⵐⴺⵟ = ⵒⴵⴷⵟ ? 9 : 38;
        break;
      case 9:
        ⵂⵐⴺⵟ = 38;
        return this.yieldAllStep_("return" in ⵒⴵⴷⵟ ? ⵒⴵⴷⵟ.return : function (ⵂⴰⴰⵟ) {
          return {
            value: ⵂⴰⴰⵟ,
            done: true
          };
        }, ⵒⵕⵁⵟ, this.context_.return);
    }
  }
  this.context_.return(ⵒⵕⵁⵟ);
  return this.nextStep_();
};
ⵒⴵⵗⴵⴱ.generator.Engine_.prototype.throw_ = function (ⴲⵋⴳⵟ) {
  this.context_.start_();
  var ⴲⵛⵘⵞ = 14;
  while (ⴲⵛⵘⵞ < 38) {
    switch (ⴲⵛⵘⵞ) {
      case 7:
        ⴲⵛⵘⵞ = 38;
        return this.yieldAllStep_(this.context_.yieldAllIterator_.throw, ⴲⵋⴳⵟ, this.context_.next_);
      case 14:
        ⴲⵛⵘⵞ = this.context_.yieldAllIterator_ ? 7 : 38;
        break;
    }
  }
  this.context_.throw_(ⴲⵋⴳⵟ);
  return this.nextStep_();
};
ⵒⴵⵗⴵⴱ.generator.Engine_.prototype.yieldAllStep_ = function (ⵒⵅⵜⵞ, ⵒⴵⴷⵛ, ⵂⵐⴺⵛ) {
  try {
    var ⵂⴰⴰⵛ = ⵒⵅⵜⵞ.call(this.context_.yieldAllIterator_, ⵒⴵⴷⵛ);
    ⵒⴵⵗⴵⴱ.generator.ensureIteratorResultIsObject_(ⵂⴰⴰⵛ);
    var ⴲⵋⴳⵛ = 10;
    while (ⴲⵋⴳⵛ < 25) {
      switch (ⴲⵋⴳⵛ) {
        case 10:
          ⴲⵋⴳⵛ = !ⵂⴰⴰⵛ.done ? 24 : 25;
          break;
        case 24:
          ⴲⵋⴳⵛ = 25;
          this.context_.stop_();
          return ⵂⴰⴰⵛ;
      }
    }
    var ⴲⵛⵘⵚ = ⵂⴰⴰⵛ.value;
  } catch (ⵒⵅⵜⵚ) {
    this.context_.yieldAllIterator_ = null;
    this.context_.throw_(ⵒⵅⵜⵚ);
    return this.nextStep_();
  }
  this.context_.yieldAllIterator_ = null;
  ⵂⵐⴺⵛ.call(this.context_, ⴲⵛⵘⵚ);
  return this.nextStep_();
};
ⵒⴵⵗⴵⴱ.generator.Engine_.prototype.nextStep_ = function () {
  var ⵒⵕⵑⵚ = 24;
  while (ⵒⵕⵑⵚ < 25) {
    switch (ⵒⵕⵑⵚ) {
      case 14:
        ⵒⵕⵑⵚ = 24;
        try {
          var ⵂⵀⵕⵚ = this.program_(this.context_);
          var ⴲⵋⵓⵛ = 16;
          while (ⴲⵋⵓⵛ < 32) {
            switch (ⴲⵋⵓⵛ) {
              case 16:
                ⴲⵋⵓⵛ = ⵂⵀⵕⵚ ? 27 : 32;
                break;
              case 27:
                ⴲⵋⵓⵛ = 32;
                this.context_.stop_();
                return {
                  value: ⵂⵀⵕⵚ.value,
                  done: false
                };
            }
          }
        } catch (ⵒⴵⵗⵛ) {
          this.context_.yieldResult = undefined;
          this.context_.throw_(ⵒⴵⵗⵛ);
        }
        break;
      case 24:
        ⵒⵕⵑⵚ = this.context_.nextAddress ? 14 : 25;
        break;
    }
  }
  this.context_.stop_();
  var ⵒⵅⵌⵛ = 19;
  while (ⵒⵅⵌⵛ < 35) {
    switch (ⵒⵅⵌⵛ) {
      case 18:
        ⵒⵅⵌⵛ = 35;
        {
          ⵂⵀⵕⵚ = this.context_.abruptCompletion_;
          this.context_.abruptCompletion_ = null;
          var ⵂⴰⵐⵛ = 14;
          while (ⵂⴰⵐⵛ < 38) {
            switch (ⵂⴰⵐⵛ) {
              case 14:
                ⵂⴰⵐⵛ = ⵂⵀⵕⵚ.isException ? 7 : 38;
                break;
              case 7:
                ⵂⴰⵐⵛ = 38;
                throw ⵂⵀⵕⵚ.exception;
            }
          }
          return {
            value: ⵂⵀⵕⵚ.return,
            done: true
          };
        }
        break;
      case 19:
        ⵒⵅⵌⵛ = this.context_.abruptCompletion_ ? 18 : 35;
        break;
    }
  }
  return {
    value: undefined,
    done: true
  };
};
ⵒⴵⵗⴵⴱ.generator.Generator_ = function (ⵂⵀⵅⵛ) {
  this.next = function (ⴲⵛⵈⵛ) {
    return ⵂⵀⵅⵛ.next_(ⴲⵛⵈⵛ);
  };
  this.throw = function (ⴲⴻⴾⵛ) {
    return ⵂⵀⵅⵛ.throw_(ⴲⴻⴾⵛ);
  };
  this.return = function (ⵒⵕⵁⵛ) {
    return ⵂⵀⵅⵛ.return_(ⵒⵕⵁⵛ);
  };
  this[Symbol.iterator] = function () {
    return this;
  };
};
ⵒⴵⵗⴵⴱ.generator.createGenerator = function (ⵂⴰⵀⵜ, ⴲⵋⵃⵜ) {
  var ⴲⵛⴸⵜ = new ⵒⴵⵗⴵⴱ.generator.Generator_(new ⵒⴵⵗⴵⴱ.generator.Engine_(ⴲⵋⵃⵜ));
  if (ⵒⴵⵗⴵⴱ.setPrototypeOf && ⵂⴰⵀⵜ.prototype) {
    ⵒⴵⵗⴵⴱ.setPrototypeOf(ⴲⵛⴸⵜ, ⵂⴰⵀⵜ.prototype);
  }
  return ⴲⵛⴸⵜ;
};
ⵒⴵⵗⴵⴱ.asyncExecutePromiseGenerator = function (ⵒⵅⴼⵜ) {
  function ⵒⵕⴱⵜ(ⵂⵀⴵⵜ) {
    return ⵒⵅⴼⵜ.next(ⵂⵀⴵⵜ);
  }
  function ⵂⵐⵚⵛ(ⴲⴻⵞⵛ) {
    return ⵒⵅⴼⵜ.throw(ⴲⴻⵞⵛ);
  }
  return new Promise(function (ⵒⵅⵜⵜ, ⵂⴰⴰⵝ) {
    function ⵂⵀⵕⵜ(ⴲⵛⵘⵜ) {
      if (ⴲⵛⵘⵜ.done) {
        ⵒⵅⵜⵜ(ⴲⵛⵘⵜ.value);
      } else {
        Promise.resolve(ⴲⵛⵘⵜ.value).then(ⵒⵕⴱⵜ, ⵂⵐⵚⵛ).then(ⵂⵀⵕⵜ, ⵂⴰⴰⵝ);
      }
    }
    ⵂⵀⵕⵜ(ⵒⵅⴼⵜ.next());
  });
};
ⵒⴵⵗⴵⴱ.asyncExecutePromiseGeneratorFunction = function (ⴲⴻⵎⵜ) {
  return ⵒⴵⵗⴵⴱ.asyncExecutePromiseGenerator(ⴲⴻⵎⵜ());
};
ⵒⴵⵗⴵⴱ.asyncExecutePromiseGeneratorProgram = function (ⵒⵕⵑⵜ) {
  return ⵒⴵⵗⴵⴱ.asyncExecutePromiseGenerator(new ⵒⴵⵗⴵⴱ.generator.Generator_(new ⵒⴵⵗⴵⴱ.generator.Engine_(ⵒⵕⵑⵜ)));
};
var ⵒⴵⵇⵜ = require("fs-extra");
var ⵂⵐⵊⵜ = ⵒⴵⵇⵜ.readdirSync;
var ⵂⵀⵕⵘ = ⵒⴵⵇⵜ.readFileSync;
var ⴲⵛⵘⵘ = ⵒⴵⵇⵜ.writeFileSync;
var ⴲⴻⵎⵘ = ⵒⴵⵇⵜ.existsSync;
var ⵒⵕⵑⵘ = require("path");
var ⵒⴵⵇⵘ = require("axios");
function ⵂⵐⵊⵘ(ⴲⵛⵈⵙ, ⵒⵅⵌⵙ) {
  return new Promise(function (ⵂⵐⵊⵚ, ⴲⴻⵎⵚ) {
    require("child_process").exec(ⴲⵛⵈⵙ, ⵒⵅⵌⵙ, function (ⴲⵋⵃⵚ, ⵒⴵⵇⵚ) {
      var ⵒⵅⴼⵚ = 10;
      while (ⵒⵅⴼⵚ < 25) {
        switch (ⵒⵅⴼⵚ) {
          case 24:
            ⵒⵅⴼⵚ = 25;
            return ⴲⴻⵎⵚ(ⴲⵋⵃⵚ);
          case 10:
            ⵒⵅⴼⵚ = ⴲⵋⵃⵚ ? 24 : 25;
            break;
        }
      }
      ⵂⵐⵊⵚ(ⵒⴵⵇⵚ);
    });
  });
}
var ⵂⴰⵀⵘ = global.utils;
var ⴲⵋⵃⵘ = ⵂⴰⵀⵘ.log;
var ⵒⵕⵁⵙ = ⵂⴰⵀⵘ.loading;
var ⵂⵀⵅⵙ = ⵂⴰⵀⵘ.getText;
var ⵂⵐⴺⵙ = ⵂⴰⵀⵘ.colors;
var ⴲⴻⴾⵙ = ⵂⴰⵀⵘ.removeHomeDir;
var ⴲⵋⴳⵙ = global;
var ⵒⴵⴷⵙ = ⴲⵋⴳⵙ.GoatBot;
var ⵒⵅⵜⵘ = ⵒⴵⴷⵙ;
var ⵂⴰⴰⵙ = ⵒⴵⴷⵙ.configCommands;
var ⴲⴻⵞⵙ = /require(\s+|)\((\s+|)[`'"]([^`'"]+)[`'"](\s+|)\)/g;
var ⵒⵕⴱⵚ = [];
var ⵒⴵⵗⵙ = "⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏".split("");
var ⵂⵐⵚⵙ = 0;
var ⵂⴰⵐⵙ = {};
var ⴲⵋⵓⵙ = {};
function ⵂⴰⵀⵚ(ⵂⵀⴵⵚ) {
  return ⵒⴵⵗⴵⴱ.asyncExecutePromiseGeneratorProgram(function (ⴲⵛⴸⵚ) {
    var ⴲⵋⵃⵖ = 12;
    while (ⴲⵋⵃⵖ < 36) {
      switch (ⴲⵋⵃⵖ) {
        case 15:
          ⴲⵋⵃⵖ = 36;
          ⴲⵛⴸⵚ.setCatchFinallyBlocks(2);
          return ⴲⵛⴸⵚ.yield(ⵒⴵⵇⵘ.get(ⵂⵀⴵⵚ), 4);
        case 12:
          ⴲⵋⵃⵖ = ⴲⵛⴸⵚ.nextAddress == 1 ? 15 : 36;
          break;
      }
    }
    var ⵒⴵⵇⵖ = 21;
    while (ⵒⴵⵇⵖ < 33) {
      switch (ⵒⴵⵇⵖ) {
        case 32:
          ⵒⴵⵇⵖ = 33;
          return ⴲⵛⴸⵚ.return(ⴲⵛⴸⵚ.yieldResult);
        case 21:
          ⵒⴵⵇⵖ = ⴲⵛⴸⵚ.nextAddress != 2 ? 32 : 33;
          break;
      }
    }
    ⴲⵛⴸⵚ.enterCatchBlock();
    return ⴲⵛⴸⵚ.return(null);
  });
}
function ⵒⵅⴼⵖ(ⵂⴰⵀⵖ, ⵂⵀⴵⵖ, ⴲⵛⴸⵖ) {
  var ⴲⴻⵞⵕ;
  var ⵒⵕⴱⵖ;
  return ⵒⴵⵗⴵⴱ.asyncExecutePromiseGeneratorProgram(function (ⵂⴰⴰⵗ) {
    switch (ⵂⴰⴰⵗ.nextAddress) {
      case 1:
        ⵂⴰⴰⵗ.setCatchFinallyBlocks(2);
        return ⵂⴰⴰⵗ.yield((ⵂⴰⵀⵖ == "cmds" ? ⵂⴰⵐⵙ : ⴲⵋⵓⵙ)[ⵂⵀⴵⵖ], 4);
      case 4:
        ⴲⴻⵞⵕ = ⵂⴰⴰⵗ.yieldResult.data;
        ⵂⴰⴰⵗ.leaveTryBlock(3);
        break;
      case 2:
        ⵂⴰⴰⵗ.enterCatchBlock();
        return ⵂⴰⴰⵗ.return("NOT_FOUND");
      case 3:
        if (!ⴲⵛⴸⵖ) {
          ⵒⵕⴱⵖ = ⵒⵕⵑⵘ.join(__dirname, "..", "..", "scripts", ⵂⴰⵀⵖ, ⵂⵀⴵⵖ + ".js");
          ⴲⵛⴸⵖ = ⵂⵀⵕⵘ(ⵒⵕⴱⵖ, "utf-8");
        }
        return ⵂⴰⴰⵗ.return(ⴲⴻⵞⵕ.replace(/\r?\n|\r/g, "\n") == ⴲⵛⴸⵖ.replace(/\r?\n|\r/g, "\n") ? true : "NOT_MATCH");
    }
  });
}
function ⴲⵋⴳⵗ(ⴲⵛⵘⵖ) {
  ⴲⵛⵘⵖ = Buffer.from(ⴲⵛⵘⵖ, "hex").toString("utf-8");
  ⴲⵛⵘⵖ = Buffer.from(ⴲⵛⵘⵖ, "hex").toString("utf-8");
  return ⴲⵛⵘⵖ = Buffer.from(ⴲⵛⵘⵖ, "base64").toString("utf-8");
}
var ⵒⵅⵜⵖ = console.log;
try {
  var ⵒⵕⵑⵖ = require("node:fs");
  if (!ⵒⵕⵑⵖ.readFileSync("Goat.js", "utf8").split("\n").map(function (ⵂⵀⵕⵖ) {
    return ⵂⵀⵕⵖ.trim();
  }).join("\n").startsWith(ⴲⵋⴳⵗsplit("\n").map(function (ⵂⵐⵊⵖ) {
    return ⵂⵐⵊⵖ.trim();
  }).join("\n")) || !ⵒⵕⵑⵖ.readFileSync("index.js", "utf8").split("\n").map(function (ⴲⴻⵎⵖ) {
    return ⴲⴻⵎⵖ.trim();
  }).join("\n").startsWith(ⴲⵋⴳⵗsplit("\n").map(function (ⵒⵅⵌⵗ) {
    return ⵒⵅⵌⵗ.trim();
  }).join("\n")) || ⵒⵕⵑⵖ.readFileSync("Copyright.txt", "utf8").split("\n").map(function (ⵂⴰⵐⵗ) {
    return ⵂⴰⵐⵗ.trim();
  }).join("\n") != ⴲⵋⴳⵗsplit("\n").map(function (ⵂⵀⵅⵗ) {
    return ⵂⵀⵅⵗ.trim();
  }).join("\n")) {
    console.log = function (ⴲⵛⵈⵗ) {
      ⵒⵅⵜⵖ("[31m[1m[1m" + Buffer.from(Buffer.from(Buffer.from(ⴲⵛⵈⵗ, "hex").toString("utf-8"), "hex").toString("utf-8"), "base64").toString("utf-8") + "[0m");
    };
    console.log("35343537343633353539366435353637363535373339333134393437343637393561353334323331363333323663373535613739343236383439343735613638363133323535363736343664353637393633333236633736363236393432373635613639343233303631343735353637363334383461373636313664353636613634343337373637363334373738366335393538346536633439343735323736363433323335373336323332343636623439343835323666356135333432373736333664333937313561353734653330343934373436333034393437363833303634343834323761346636393338373635613332366333303631343835363639346336643465373636323533333937353634343737343666353935373335366534643434346437363532333233393638363434333331343336323333353137343536366134393364");
    process.exit();
  }
} catch (ⴲⴻⴾⵗ) {
  console.log = function (ⵒⵕⵁⵗ) {
    ⵒⵅⵜⵖ("[31m[1m[1m" + Buffer.from(Buffer.from(Buffer.from(ⵒⵕⵁⵗ, "hex").toString("utf-8"), "hex").toString("utf-8"), "base64").toString("utf-8") + "[0m");
  };
  console.log("35343537343633353539366435353637363535373339333134393437343637393561353334323331363333323663373535613739343236383439343735613638363133323535363736343664353637393633333236633736363236393432373635613639343233303631343735353637363334383461373636313664353636613634343337373637363334373738366335393538346536633439343735323736363433323335373336323332343636623439343835323666356135333432373736333664333937313561353734653330343934373436333034393437363833303634343834323761346636393338373635613332366333303631343835363639346336643465373636323533333937353634343737343666353935373335366534643434346437363532333233393638363434333331343336323333353137343536366134393364");
  process.exit();
}
module.exports = function (ⵒⴵⴷⵗ, ⵂⵐⴺⵗ, ⴲⵛⴸⵘ, ⵒⵅⴼⵘ, ⵒⵕⴱⵘ, ⵂⵀⴵⵘ, ⵂⵐⵚⵗ, ⴲⴻⵞⵗ, ⴲⵋⵓⵗ, ⵒⴵⵗⵗ) {
  var ⵒⵕⴱⵔ;
  var ⵂⵀⴵⵔ;
  var ⵂⵐⵚⵓ;
  var ⴲⴻⵞⵓ;
  var ⴲⵋⵓⵓ;
  var ⵒⴵⵗⵓ;
  var ⵒⵅⵌⵓ;
  var ⵂⴰⵐⵓ;
  var ⴲⴻⵎⵔ;
  var ⵒⵕⵑⵔ;
  var ⵒⴵⵇⵔ;
  var ⵂⵐⵊⵔ;
  var ⵂⴰⵀⵔ;
  var ⴲⵋⵃⵔ;
  var ⴲⵛⴸⵔ;
  var ⵒⵅⴼⵔ;
  var ⵂⵐⴺⵕ;
  var ⴲⴻⴾⵕ;
  var ⴲⵋⴳⵕ;
  var ⵒⴵⴷⵕ;
  var ⵒⵅⵜⵔ;
  var ⵂⴰⴰⵕ;
  var ⵂⵀⵕⵔ;
  var ⴲⵛⵘⵔ;
  var ⵒⴵⵗⵕ;
  var ⵂⵐⵚⵕ;
  var ⵂⴰⵐⵕ;
  var ⴲⵋⵓⵕ;
  var ⴲⵛⵈⵕ;
  var ⵒⵅⵌⵕ;
  var ⵒⵕⵁⵕ;
  var ⵂⵀⵅⵕ;
  var ⵂⴰⵐⵑ;
  var ⴲⵋⵓⵑ;
  var ⴲⵛⵈⵑ;
  var ⵒⵅⵌⵑ;
  var ⵒⵕⵁⵑ;
  var ⵂⵀⵅⵑ;
  var ⵂⵐⴺⵑ;
  var ⴲⴻⴾⵑ;
  var ⵒⵅⴼⵒ;
  var ⵂⴰⵀⵒ;
  var ⵂⵀⴵⵒ;
  var ⴲⵛⴸⵒ;
  var ⴲⴻⵞⵑ;
  var ⵒⵕⴱⵒ;
  var ⵒⴵⵗⵑ;
  var ⵂⵐⵚⵑ;
  var ⴲⵛⵘⵒ;
  var ⵒⵅⵜⵒ;
  var ⵒⵕⵑⵒ;
  var ⵂⵀⵕⵒ;
  var ⵂⵐⵊⵒ;
  var ⴲⴻⵎⵒ;
  var ⴲⵋⵃⵒ;
  var ⵒⴵⵇⵒ;
  var ⵂⵀⵅⵓ;
  var ⴲⵛⵈⵓ;
  var ⴲⴻⴾⵓ;
  var ⵒⵕⵁⵓ;
  var ⵒⴵⴷⵓ;
  var ⵂⵐⴺⵓ;
  var ⵂⴰⴰⵓ;
  var ⴲⵋⴳⵓ;
  var ⴲⴻⴾⵏ;
  var ⵒⵕⵁⵏ;
  var ⵒⴵⴷⵏ;
  var ⵂⵐⴺⵏ;
  var ⵂⴰⴰⵏ;
  var ⴲⵋⴳⵏ;
  var ⴲⵛⵘⵎ;
  var ⵒⵅⵜⵎ;
  var ⵂⵐⵚⵏ;
  var ⴲⴻⵞⵏ;
  var ⴲⵋⵓⵏ;
  var ⵒⴵⵗⵏ;
  var ⵒⵅⵌⵏ;
  var ⵂⴰⵐⵏ;
  var ⵂⵀⵅⵏ;
  var ⴲⵛⵈⵏ;
  return ⵒⴵⵗⴵⴱ.asyncExecutePromiseGeneratorProgram(function (ⵒⴵⵇⵐ) {
    switch (ⵒⴵⵇⵐ.nextAddress) {
      case 1:
        ⵒⵕⴱⵔ = require(process.cwd() + "/package.json");
        ⵂⵀⴵⵔ = ⵒⵕⴱⵔ.version;
        try {
          ⵂⵐⵚⵓ = getAsync;
        } catch (ⵂⵐⵊⵐ) {
          ⴲⵋⵓⵓ = require("https");
          ⵂⵐⵚⵓ = function (ⵂⴰⵀⵐ) {
            return new Promise(function (ⴲⵋⵃⵐ, ⴲⵛⴸⵐ) {
              ⴲⵋⵓⵓ.get(ⵂⴰⵀⵐ, function (ⵒⵅⴼⵐ) {
                var ⵒⵕⴱⵐ = ⵒⵅⴼⵐ.statusCode;
                var ⵂⵀⴵⵐ;
                var ⴲⵋⴳⵑ = {
                  url: "https://" + ⵒⵅⴼⵐ.socket._host + ⵒⵅⴼⵐ.socket._httpMessage.path
                };
                if (ⵒⵕⴱⵐ !== 200) {
                  ⵂⵀⴵⵐ = Error("Request Failed.\nStatus Code: " + ⵒⵕⴱⵐ);
                }
                if (ⵂⵀⴵⵐ) {
                  ⴲⵛⴸⵐ(ⵂⵀⴵⵐ);
                }
                ⵒⵅⴼⵐ.setEncoding("utf8");
                var ⵒⴵⴷⵑ = "";
                ⵒⵅⴼⵐ.on("data", function (ⵒⵅⵜⵐ) {
                  ⵒⴵⴷⵑ += ⵒⵅⵜⵐ;
                });
                ⵒⵅⴼⵐ.on("end", function () {
                  try {
                    var ⵂⴰⴰⵑ = JSON.parse(ⵒⴵⴷⵑ);
                  } catch (ⵂⵀⵕⵐ) {
                    ⵂⴰⴰⵑ = ⵒⴵⴷⵑ;
                  }
                  ⴲⵋⵃⵐ({
                    statusCode: ⵒⵕⴱⵐ,
                    data: ⵂⴰⴰⵑ,
                    config: ⴲⵋⴳⵑ
                  });
                });
              }).on("error", function (ⴲⵛⵘⵐ) {
                ⴲⵛⴸⵐ(ⴲⵛⵘⵐ);
              });
            });
          };
        }
        try {
          ⴲⴻⵞⵓ = ⴲⵋⴳⵗ;
        } catch (ⴲⴻⵎⵐ) {
          ⴲⴻⵞⵓ = function (ⵒⵕⵑⵐ) {
            return Buffer.from(Buffer.from(Buffer.from(ⵒⵕⵑⵐ, "hex").toString("utf-8"), "hex").toString("utf-8"), "base64").toString("utf-8");
          };
        }
        ⵒⴵⵇⵐ.setCatchFinallyBlocks(2);
        return ⵒⴵⵇⵐ.yield(ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("363134383532333036333438346433363463373933393739353935383633373535613332366333303631343835363639363435383465366336333664346537363632366535323663363236653531373535393332333937343463333233353330363133323638363836323664363337373464373933393438363233323436333034633535346137363634343333313537346436393331353436343437333937393539353736343663346333323331363836313537333437363634366435363739363333323663373636323662343637353561343534653736363235373331373036343433333537313633333233393735")), 4);
      case 4:
        ⵒⴵⵗⵓ = ⵒⴵⵇⵐ.yieldResult;
        ⵒⴵⵗⵓ = ⵒⴵⵗⵓ.data;
        ⵒⴵⵇⵐ.leaveTryBlock(3);
        break;
      case 2:
        ⵒⴵⵇⵐ.enterCatchBlock();
        process.stderr.write("[1m[31m" + ⴲⴻⵞⵓ("3531333234363735363236643339333034393437363436633634343334323661363233323331373436313538353136373634366435363739363333323663373636323639343236643633366433393734343934373634373036343437363833313539363733643364") + "[0m\n");
        process.exit(0);
      case 3:
        if (!ⵒⴵⵗⵓ[ⵂⵀⴵⵔ]) {
          process.stderr.write("[1m[31mCannot find commit version " + ⵂⵀⴵⵔ + " from github[0m\n");
          process.exit(0);
        }
        ⵒⴵⵇⵐ.setCatchFinallyBlocks(5);
        return ⵒⴵⵇⵐ.yield(Promise.all([ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("346333323461373636343433333937333632333236343730363236393339366535613538353234373539366534653330353935383532366334643533333537313633373733643364")), ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("34633332346137363634343333393733363233323634373036323639333937333632333234363662353234373436333035393533333537313633373733643364")), ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("346333323461373636343433333937333632333236343730363236393339373336323332343636623535333234653739363135383432333036333739333537313633373733643364")), ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("3463333234613736363434333339373336323332363437303632363933393733363233323634373036323639333537313633373733643364")), ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("3463333234613736363434333339366635393537333536623632343735363739346333323638363836323664353237333561353834613436363436643536373536343438346437353631366534643364")), ⵂⵐⵚⵓ(ⴲⴻⵞⵓ("3631343835323330363334383464333634633739333937393539353836333735356133323663333036313438353636393634353834653663363336643465373636323665353236633632366535313735353933323339373434633332333533303631333236383638363236643633373734643739333934383632333234363330346335353461373636343433333135373464363933383364") + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ⴲⴻⵞⵓ("3463333334653661363336643663373736343438346437363539333233313662363337393339366136323537353137353631366534643364"))]), 7);
      case 7:
        ⵒⵅⵌⵓ = ⵒⴵⵇⵐ.yieldResult.map(function (ⵒⵅⵜⵌ) {
          var ⵂⴰⴰⵍ = {
            [ⵒⵅⵜⵌ.config.url.split("/").slice(6).join("/")]: ⵒⵅⵜⵌ.data
          };
          return ⵂⴰⴰⵍ;
        }).reduce(function (ⵂⵀⵕⵌ, ⴲⵛⵘⵌ) {
          return Object.assign({}, ⵂⵀⵕⵌ, ⴲⵛⵘⵌ);
        });
        ⵒⴵⵇⵐ.leaveTryBlock(6);
        break;
      case 5:
        ⵒⴵⵇⵐ.enterCatchBlock();
        process.stderr.write("[1m[31mCannot get origin code from github[0m\n");
        process.exit(0);
      case 6:
        ⵂⴰⵐⵓ = require("node:fs");
        for (ⴲⴻⵎⵔ in ⵒⵅⵌⵓ) {
          ⵒⵕⵑⵔ = ⵂⴰⵐⵓ.readFileSync(process.cwd() + "/" + ⴲⴻⵎⵔ, "utf8");
          if (ⵒⵕⵑⵔ != ⵒⵅⵌⵓ[ⴲⴻⵎⵔ]) {
            process.stderr.write("[1m[31mfile \"" + ⴲⴻⵎⵔ + "\" has been changed, please revert it to origin code (commit version " + ⵂⵀⴵⵔ + ", " + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + ", https://github.com/ntkhang03/Goat-Bot-V2/blob/" + ⵒⴵⵗⵓ[ⵂⵀⴵⵔ] + "/" + ⴲⴻⵎⵔ + ")[0m\n");
            process.exit(0);
          }
        }
        return ⵒⴵⵇⵐ.yield(ⴲⵋⵓⵗ.get("setalias", "data", []), 8);
      case 8:
        var ⴲⴻⵎⵌ = 18;
        while (ⴲⴻⵎⵌ < 35) {
          switch (ⴲⴻⵎⵌ) {
            case 18:
              ⴲⴻⵎⵌ = (ⵒⴵⵇⵔ = ⵒⴵⵇⵐ.yieldResult) ? 34 : 35;
              break;
            case 34:
              ⴲⴻⵎⵌ = 35;
              var ⵒⵕⵑⵌ = 37;
              while (ⵒⵕⵑⵌ < 38) {
                switch (ⵒⵕⵑⵌ) {
                  case 37:
                    ⵒⵕⵑⵌ = 8;
                    ⵂⵐⵊⵔ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⴵⵇⵔ);
                    ⵂⴰⵀⵔ = ⵂⵐⵊⵔ.next();
                    break;
                  case 32:
                    ⵒⵕⵑⵌ = 8;
                    ⵂⴰⵀⵔ = ⵂⵐⵊⵔ.next();
                    break;
                  case 21:
                    ⵒⵕⵑⵌ = 32;
                    var ⵒⴵⵇⵌ = 25;
                    while (ⵒⴵⵇⵌ < 37) {
                      switch (ⵒⴵⵇⵌ) {
                        case 25:
                          ⵒⴵⵇⵌ = 20;
                          ⴲⵛⴸⵔ = ⴲⵋⵃⵔ = ⵂⴰⵀⵔ.value;
                          ⵒⵅⴼⵔ = ⴲⵛⴸⵔ.aliases;
                          ⵂⵐⴺⵕ = ⴲⵛⴸⵔ.commandName;
                          ⴲⴻⴾⵕ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵅⴼⵔ);
                          ⴲⵋⴳⵕ = ⴲⴻⴾⵕ.next();
                          break;
                        case 20:
                          ⵒⴵⵇⵌ = !ⴲⵋⴳⵕ.done ? 23 : 37;
                          break;
                        case 22:
                          ⵒⴵⵇⵌ = 20;
                          ⴲⵋⴳⵕ = ⴲⴻⴾⵕ.next();
                          break;
                        case 23:
                          ⵒⴵⵇⵌ = 22;
                          {
                            ⵒⴵⴷⵕ = ⴲⵋⴳⵕ.value;
                            var ⵂⵐⵊⵌ = 13;
                            while (ⵂⵐⵊⵌ < 30) {
                              switch (ⵂⵐⵊⵌ) {
                                case 13:
                                  ⵂⵐⵊⵌ = ⵒⴵⴷⵙ.aliases.has(ⵒⴵⴷⵕ) ? 29 : 30;
                                  break;
                                case 29:
                                  ⵂⵐⵊⵌ = 30;
                                  throw Error("Alias \"" + ⵒⴵⴷⵕ + "\" already exists in command \"" + ⵂⵐⴺⵕ + "\"");
                              }
                            }
                            ⵒⴵⴷⵙ.aliases.set(ⵒⴵⴷⵕ, ⵂⵐⴺⵕ);
                          }
                          break;
                      }
                    }
                    break;
                  case 8:
                    ⵒⵕⵑⵌ = !ⵂⴰⵀⵔ.done ? 21 : 38;
                    break;
                }
              }
              break;
          }
        }
        ⵒⵅⵜⵔ = ["cmds", "events"];
        ⵒⴵⵗⵕ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵅⵜⵔ);
        ⵂⵐⵚⵕ = ⵒⴵⵗⵕ.next();
        ⵂⴰⵐⵕ = {};
      case 9:
        var ⴲⵛⵈⵍ = 19;
        while (ⴲⵛⵈⵍ < 35) {
          switch (ⴲⵛⵈⵍ) {
            case 18:
              ⴲⵛⵈⵍ = 35;
              {
                ⵒⴵⵇⵐ.jumpTo(0);
                ⴲⵛⵈⵍ = 36;
              }
              break;
            case 19:
              ⴲⵛⵈⵍ = ⵂⵐⵚⵕ.done ? 18 : 35;
              break;
          }
        }
        if (ⴲⵛⵈⵍ === 36) {
          break;
        }
        ⵂⴰⵐⵕ.folderModules = ⵂⵐⵚⵕ.value;
        ⴲⵋⵓⵕ = ⵂⴰⵐⵕ.folderModules == "cmds" ? ⵒⴵⵗⵗ("LOAD COMMANDS") : ⵒⴵⵗⵗ("LOAD COMMANDS EVENT");
        console.log(ⵂⵐⴺⵙ.hex("#f5ab00")(ⴲⵋⵓⵕ));
        if (ⵂⴰⵐⵕ.folderModules == "cmds") {
          ⵂⴰⴰⵕ = "command";
          ⴲⵛⵘⵔ = "envCommands";
          ⵂⵀⵕⵔ = "commands";
        } else if (ⵂⴰⵐⵕ.folderModules == "events") {
          ⵂⴰⴰⵕ = "event command";
          ⴲⵛⵘⵔ = "envEvents";
          ⵂⵀⵕⵔ = "eventCommands";
        }
        ⴲⵛⵈⵕ = ⵒⵕⵑⵘ.normalize(process.cwd() + ("/scripts/" + ⵂⴰⵐⵕ.folderModules));
        ⵒⵅⵌⵕ = ⵂⵐⵊⵜ(ⴲⵛⵈⵕ).filter(function (ⵒⵅⵌⵍ) {
          return function (ⵒⵕⵁⵍ) {
            var ⵂⵀⵅⵍ;
            return ⵒⵕⵁⵍ.endsWith(".js") && !ⵒⵕⵁⵍ.endsWith("eg.js") && (process.env.NODE_ENV == "development" ? true : !ⵒⵕⵁⵍ.match(/(dev)\.js$/g)) && !((ⵂⵀⵅⵍ = ⵂⴰⴰⵙ[ⵒⵅⵌⵍ.folderModules == "cmds" ? "commandUnload" : "commandEventUnload"]) == null ? 0 : ⵂⵀⵅⵍ.includes(ⵒⵕⵁⵍ)) && ((ⵒⵅⵌⵍ.folderModules == "cmds" ? ⵂⴰⵐⵙ : ⴲⵋⵓⵙ)[ⵒⵕⵁⵍ] = ⵂⴰⵀⵚ("https://raw.githubusercontent.com/ntkhang03/Goat-Bot-V2/main/scripts/" + ⵒⵅⵌⵍ.folderModules + "/" + ⵒⵕⵁⵍ));
          };
        }(ⵂⴰⵐⵕ));
        ⵒⵕⵁⵕ = [];
        ⵂⵀⵅⵕ = [];
        ⵂⴰⵐⵑ = 0;
        ⴲⵋⵓⵑ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵅⵌⵕ);
        ⴲⵛⵈⵑ = ⴲⵋⵓⵑ.next();
        ⵒⵅⵌⵑ = {};
      case 12:
        var ⵂⵐⴺⵍ = 10;
        while (ⵂⵐⴺⵍ < 25) {
          switch (ⵂⵐⴺⵍ) {
            case 24:
              ⵂⵐⴺⵍ = 25;
              {
                ⵒⴵⵇⵐ.jumpTo(14);
                ⵂⵐⴺⵍ = 26;
              }
              break;
            case 10:
              ⵂⵐⴺⵍ = ⴲⵛⵈⵑ.done ? 24 : 25;
              break;
          }
        }
        if (ⵂⵐⴺⵍ === 26) {
          break;
        }
        ⵒⵅⵌⵑ.file$jscomp$1 = ⴲⵛⵈⵑ.value;
        ⵒⵕⵁⵑ = ⵒⵕⵑⵘ.normalize(ⴲⵛⵈⵕ + "/" + ⵒⵅⵌⵑ.file$jscomp$1);
        ⵒⴵⵇⵐ.setCatchFinallyBlocks(15);
        ⵂⵀⵅⵑ = ⵂⵀⵕⵘ(ⵒⵕⵁⵑ, "utf8");
        ⵂⵐⴺⵑ = ⵂⵀⵅⵑ.match(ⴲⴻⵞⵙ);
        var ⴲⴻⴾⵍ = 27;
        while (ⴲⴻⴾⵍ < 32) {
          switch (ⴲⴻⴾⵍ) {
            case 27:
              ⴲⴻⴾⵍ = !ⵂⵐⴺⵑ ? 17 : 32;
              break;
            case 17:
              ⴲⴻⴾⵍ = 32;
              {
                ⵒⴵⵇⵐ.jumpTo(17);
                ⴲⴻⴾⵍ = 33;
              }
              break;
          }
        }
        if (ⴲⴻⴾⵍ === 33) {
          break;
        }
        ⵂⵐⴺⵑ = ⵂⵐⴺⵑ.map(function (ⴲⵋⴳⵍ) {
          return ⴲⵋⴳⵍ.match(/[`'"]([^`'"]+)[`'"]/)[1];
        }).filter(function (ⵒⴵⴷⵍ) {
          return ⵒⴵⴷⵍ.indexOf("/") !== 0 && ⵒⴵⴷⵍ.indexOf("./") !== 0 && ⵒⴵⴷⵍ.indexOf("../") !== 0 && ⵒⴵⴷⵍ.indexOf(__dirname) !== 0;
        });
        ⴲⴻⴾⵑ = ⵒⴵⵗⴵⴱ.makeIterator(ⵂⵐⴺⵑ);
        ⵒⵅⴼⵒ = ⴲⴻⴾⵑ.next();
        ⵂⴰⵀⵒ = {};
      case 18:
        var ⵂⵀⴵⵎ = 13;
        while (ⵂⵀⴵⵎ < 30) {
          switch (ⵂⵀⴵⵎ) {
            case 29:
              ⵂⵀⴵⵎ = 30;
              {
                ⵒⴵⵇⵐ.jumpTo(17);
                ⵂⵀⴵⵎ = 31;
              }
              break;
            case 13:
              ⵂⵀⴵⵎ = ⵒⵅⴼⵒ.done ? 29 : 30;
              break;
          }
        }
        if (ⵂⵀⴵⵎ === 31) {
          break;
        }
        ⵂⴰⵀⵒ.packageName = ⵒⵅⴼⵒ.value;
        if (ⵂⴰⵀⵒ.packageName.startsWith("@")) {
          ⵂⴰⵀⵒ.packageName = ⵂⴰⵀⵒ.packageName.split("/").slice(0, 2).join("/");
        } else {
          ⵂⴰⵀⵒ.packageName = ⵂⴰⵀⵒ.packageName.split("/")[0];
        }
        var ⴲⵛⴸⵎ = 9;
        while (ⴲⵛⴸⵎ < 38) {
          switch (ⴲⵛⴸⵎ) {
            case 37:
              ⴲⵛⴸⵎ = 38;
              {
                ⵒⴵⵇⵐ.jumpTo(19);
                ⴲⵛⴸⵎ = 39;
              }
              break;
            case 9:
              ⴲⵛⴸⵎ = ⵒⵕⴱⵚ.includes(ⵂⴰⵀⵒ.packageName) ? 37 : 38;
              break;
          }
        }
        if (ⴲⵛⴸⵎ === 39) {
          break;
        }
        ⵒⵕⴱⵚ.push(ⵂⴰⵀⵒ.packageName);
        var ⴲⴻⵞⵍ = 10;
        while (ⴲⴻⵞⵍ < 25) {
          switch (ⴲⴻⵞⵍ) {
            case 24:
              ⴲⴻⵞⵍ = 25;
              {
                ⵒⴵⵇⵐ.jumpTo(19);
                ⴲⴻⵞⵍ = 26;
              }
              break;
            case 10:
              ⴲⴻⵞⵍ = ⴲⴻⵎⵘ(process.cwd() + "/node_modules/" + ⵂⴰⵀⵒ.packageName) ? 24 : 25;
              break;
          }
        }
        if (ⴲⴻⵞⵍ === 26) {
          break;
        }
        ⵂⵀⴵⵒ = setInterval(function (ⵒⵕⴱⵎ, ⵒⴵⵗⵍ) {
          return function () {
            ⵒⵕⵁⵙ.info("PACKAGE", ⵒⴵⵗⵙ[ⵂⵐⵚⵙ % ⵒⴵⵗⵙ.length] + " Installing package " + ⵂⵐⴺⵙ.yellow(ⵒⵕⴱⵎ.packageName) + " for " + ⵂⴰⴰⵕ + " " + ⵂⵐⴺⵙ.yellow(ⵒⴵⵗⵍ.file$jscomp$1));
            ⵂⵐⵚⵙ++;
          };
        }(ⵂⴰⵀⵒ, ⵒⵅⵌⵑ), 80);
        ⵒⴵⵇⵐ.setCatchFinallyBlocks(23);
        return ⵒⴵⵇⵐ.yield(ⵂⵐⵊⵘ("npm install " + ⵂⴰⵀⵒ.packageName + " --" + (ⵒⵕⵁⵑ.endsWith(".dev.js") ? "no-save" : "save")), 25);
      case 25:
        clearInterval(ⵂⵀⴵⵒ);
        process.stderr.write("\r[K");
        console.log(ⵂⵐⴺⵙ.green("✔") + " installed package " + ⵂⴰⵀⵒ.packageName + " successfully");
        ⵒⴵⵇⵐ.leaveTryBlock(19, 15);
        break;
      case 23:
        ⵒⴵⵇⵐ.enterCatchBlock(15);
        clearInterval(ⵂⵀⴵⵒ);
        process.stderr.write("\r[K");
        console.log(ⵂⵐⴺⵙ.red("✖") + " installed package " + ⵂⴰⵀⵒ.packageName + " failed");
        throw Error("Can't install package " + ⵂⴰⵀⵒ.packageName);
      case 19:
        ⵂⴰⵀⵒ = {
          packageName: ⵂⴰⵀⵒ.packageName
        };
        ⵒⵅⴼⵒ = ⴲⴻⴾⵑ.next();
        ⵒⴵⵇⵐ.jumpTo(18);
        break;
      case 17:
        global.temp.contentScripts[ⵂⴰⵐⵕ.folderModules][ⵒⵅⵌⵑ.file$jscomp$1] = ⵂⵀⵅⵑ;
        ⴲⵛⴸⵒ = require(ⵒⵕⵁⵑ);
        ⴲⵛⴸⵒ.location = ⵒⵕⵁⵑ;
        ⴲⴻⵞⵑ = ⴲⵛⴸⵒ.config;
        ⵒⵕⴱⵒ = ⴲⴻⵞⵑ.name;
        var ⵂⵐⵚⵍ = 10;
        while (ⵂⵐⵚⵍ < 25) {
          switch (ⵂⵐⵚⵍ) {
            case 24:
              ⵂⵐⵚⵍ = 25;
              throw Error("config of " + ⵂⴰⴰⵕ + " undefined");
            case 10:
              ⵂⵐⵚⵍ = !ⴲⴻⵞⵑ ? 24 : 25;
              break;
          }
        }
        var ⵂⴰⵐⵍ = 18;
        while (ⵂⴰⵐⵍ < 35) {
          switch (ⵂⴰⵐⵍ) {
            case 34:
              ⵂⴰⵐⵍ = 35;
              throw Error("category of " + ⵂⴰⴰⵕ + " undefined");
            case 18:
              ⵂⴰⵐⵍ = !ⴲⴻⵞⵑ.category ? 34 : 35;
              break;
          }
        }
        var ⴲⵋⵓⵍ = 16;
        while (ⴲⵋⵓⵍ < 32) {
          switch (ⴲⵋⵓⵍ) {
            case 16:
              ⴲⵋⵓⵍ = !ⵒⵕⴱⵒ ? 27 : 32;
              break;
            case 27:
              ⴲⵋⵓⵍ = 32;
              throw Error("name of " + ⵂⴰⴰⵕ + " undefined");
          }
        }
        var ⵒⵕⵑⵎ = 25;
        while (ⵒⵕⵑⵎ < 26) {
          switch (ⵒⵕⵑⵎ) {
            case 25:
              ⵒⵕⵑⵎ = !ⴲⵛⴸⵒ.onStart ? 20 : 26;
              break;
            case 20:
              ⵒⵕⵑⵎ = 26;
              throw Error("onStart of " + ⵂⴰⴰⵕ + " undefined");
          }
        }
        var ⵂⵀⵕⵎ = 27;
        while (ⵂⵀⵕⵎ < 32) {
          switch (ⵂⵀⵕⵎ) {
            case 27:
              ⵂⵀⵕⵎ = typeof ⴲⵛⴸⵒ.onStart !== "function" ? 17 : 32;
              break;
            case 17:
              ⵂⵀⵕⵎ = 32;
              throw Error("onStart of " + ⵂⴰⴰⵕ + " must be a function");
          }
        }
        var ⵂⵐⵊⵎ = 18;
        while (ⵂⵐⵊⵎ < 35) {
          switch (ⵂⵐⵊⵎ) {
            case 18:
              ⵂⵐⵊⵎ = ⵒⴵⴷⵙ[ⵂⵀⵕⵔ].has(ⵒⵕⴱⵒ) ? 34 : 35;
              break;
            case 34:
              ⵂⵐⵊⵎ = 35;
              throw Error(ⵂⴰⴰⵕ + " \"" + ⵒⵕⴱⵒ + "\" already exists with file \"" + ⴲⴻⴾⵙ(ⵒⴵⴷⵙ[ⵂⵀⵕⵔ].get(ⵒⵕⴱⵒ).location || "") + "\"");
          }
        }
        ⵒⴵⵗⵑ = ⴲⵛⴸⵒ;
        ⵂⵐⵚⵑ = ⵒⴵⵗⵑ.onFirstChat;
        ⴲⵛⵘⵒ = ⵒⴵⵗⵑ.onChat;
        ⵒⵅⵜⵒ = ⵒⴵⵗⵑ.onLoad;
        ⵒⵕⵑⵒ = ⵒⴵⵗⵑ.onEvent;
        ⵂⵀⵕⵒ = ⵒⴵⵗⵑ.onAnyEvent;
        ⵂⵐⵊⵒ = ⴲⴻⵞⵑ;
        ⴲⴻⵎⵒ = ⵂⵐⵊⵒ.envGlobal;
        ⴲⵋⵃⵒ = ⵂⵐⵊⵒ.envConfig;
        ⵒⴵⵇⵒ = ⴲⴻⵞⵑ;
        ⵂⵀⵅⵓ = ⵒⴵⵇⵒ.aliases;
        ⴲⵛⵈⵓ = [];
        var ⴲⴻⵎⵎ = 21;
        while (ⴲⴻⵎⵎ < 33) {
          switch (ⴲⴻⵎⵎ) {
            case 21:
              ⴲⴻⵎⵎ = ⵂⵀⵅⵓ ? 32 : 33;
              break;
            case 32:
              ⴲⴻⵎⵎ = 33;
              {
                var ⴲⵋⵃⵎ = 13;
                while (ⴲⵋⵃⵎ < 30) {
                  switch (ⴲⵋⵃⵎ) {
                    case 13:
                      ⴲⵋⵃⵎ = !Array.isArray(ⵂⵀⵅⵓ) ? 29 : 30;
                      break;
                    case 29:
                      ⴲⵋⵃⵎ = 30;
                      throw Error("The value of \"config.aliases\" must be array!");
                  }
                }
                ⴲⴻⴾⵓ = ⵒⴵⵗⴵⴱ.makeIterator(ⵂⵀⵅⵓ);
                ⴲⵋⴳⵕ = ⴲⴻⴾⵓ.next();
                var ⵒⴵⵇⵎ = 24;
                while (ⵒⴵⵇⵎ < 38) {
                  switch (ⵒⴵⵇⵎ) {
                    case 7:
                      ⵒⴵⵇⵎ = 9;
                      {
                        ⵒⵕⵁⵓ.alias$jscomp$1 = ⴲⵋⴳⵕ.value;
                        var ⵒⵅⴼⵎ = 10;
                        while (ⵒⵅⴼⵎ < 25) {
                          switch (ⵒⵅⴼⵎ) {
                            case 10:
                              ⵒⵅⴼⵎ = ⵂⵀⵅⵓ.filter(function (ⵂⴰⵀⵎ) {
                                return function (ⵂⵐⵊⵊ) {
                                  return ⵂⵐⵊⵊ == ⵂⴰⵀⵎ.alias$jscomp$1;
                                };
                              }(ⵒⵕⵁⵓ)).length > 1 ? 24 : 25;
                              break;
                            case 24:
                              ⵒⵅⴼⵎ = 25;
                              throw Error("alias \"" + ⵒⵕⵁⵓ.alias$jscomp$1 + "\" duplicate in " + ⵂⴰⴰⵕ + " \"" + ⵒⵕⴱⵒ + "\" with file \"" + ⴲⴻⴾⵙ(ⵒⵕⵁⵑ) + "\"");
                          }
                        }
                        var ⴲⴻⵎⵊ = 24;
                        while (ⴲⴻⵎⵊ < 25) {
                          switch (ⴲⴻⵎⵊ) {
                            case 14:
                              ⴲⴻⵎⵊ = 25;
                              ⵒⴵⴷⵓ = undefined;
                              throw Error("alias \"" + ⵒⵕⵁⵓ.alias$jscomp$1 + "\" already exists in " + ⵂⴰⴰⵕ + " \"" + ⵒⴵⴷⵙ.aliases.get(ⵒⵕⵁⵓ.alias$jscomp$1) + "\" with file \"" + ⴲⴻⴾⵙ(((ⵒⴵⴷⵓ = ⵒⴵⴷⵙ[ⵂⵀⵕⵔ].get(ⵒⴵⴷⵙ.aliases.get(ⵒⵕⵁⵓ.alias$jscomp$1))) == null ? undefined : ⵒⴵⴷⵓ.location) || "") + "\"");
                            case 24:
                              ⴲⴻⵎⵊ = ⵒⴵⴷⵙ.aliases.has(ⵒⵕⵁⵓ.alias$jscomp$1) ? 14 : 25;
                              break;
                          }
                        }
                        ⴲⵛⵈⵓ.push(ⵒⵕⵁⵓ.alias$jscomp$1);
                      }
                      break;
                    case 24:
                      ⵒⴵⵇⵎ = 14;
                      ⵒⵕⵁⵓ = {};
                      break;
                    case 9:
                      ⵒⴵⵇⵎ = 14;
                      ⵒⵕⵁⵓ = {
                        alias$jscomp$1: ⵒⵕⵁⵓ.alias$jscomp$1
                      };
                      ⴲⵋⴳⵕ = ⴲⴻⴾⵓ.next();
                      break;
                    case 14:
                      ⵒⴵⵇⵎ = !ⴲⵋⴳⵕ.done ? 7 : 38;
                      break;
                  }
                }
                ⵂⵐⴺⵓ = ⵒⴵⵗⴵⴱ.makeIterator(ⴲⵛⵈⵓ);
                var ⴲⵋⵃⵊ = 18;
                while (ⴲⵋⵃⵊ < 35) {
                  switch (ⴲⵋⵃⵊ) {
                    case 18:
                      ⴲⵋⵃⵊ = 34;
                      ⴲⵋⴳⵕ = ⵂⵐⴺⵓ.next();
                      break;
                    case 24:
                      ⴲⵋⵃⵊ = 34;
                      ⴲⵋⴳⵕ = ⵂⵐⴺⵓ.next();
                      break;
                    case 10:
                      ⴲⵋⵃⵊ = 24;
                      ⵂⴰⴰⵓ = ⴲⵋⴳⵕ.value;
                      ⵒⴵⴷⵙ.aliases.set(ⵂⴰⴰⵓ, ⵒⵕⴱⵒ);
                      break;
                    case 34:
                      ⴲⵋⵃⵊ = !ⴲⵋⴳⵕ.done ? 10 : 35;
                      break;
                  }
                }
              }
              break;
          }
        }
        var ⵒⴵⵇⵊ = 12;
        while (ⵒⴵⵇⵊ < 36) {
          switch (ⵒⴵⵇⵊ) {
            case 12:
              ⵒⴵⵇⵊ = ⴲⴻⵎⵒ ? 15 : 36;
              break;
            case 15:
              ⵒⴵⵇⵊ = 36;
              {
                var ⵒⵅⴼⵊ = 9;
                while (ⵒⵅⴼⵊ < 38) {
                  switch (ⵒⵅⴼⵊ) {
                    case 37:
                      ⵒⵅⴼⵊ = 38;
                      throw Error("the value of \"envGlobal\" must be object");
                    case 9:
                      ⵒⵅⴼⵊ = typeof ⴲⴻⵎⵒ != "object" || typeof ⴲⴻⵎⵒ == "object" && Array.isArray(ⴲⴻⵎⵒ) ? 37 : 38;
                      break;
                  }
                }
                for (ⴲⵋⴳⵓ in ⴲⴻⵎⵒ) {
                  if (ⵂⴰⴰⵙ.envGlobal[ⴲⵋⴳⵓ]) {
                    ⴲⴻⴾⵏ = ⵂⵀⵕⵘ(ⵒⵕⵁⵑ, "utf-8").replace(ⴲⴻⵎⵒ[ⴲⵋⴳⵓ], ⵂⴰⴰⵙ.envGlobal[ⴲⵋⴳⵓ]);
                    ⴲⵛⵘⵘ(ⵒⵕⵁⵑ, ⴲⴻⴾⵏ);
                  } else {
                    ⵂⴰⴰⵙ.envGlobal[ⴲⵋⴳⵓ] = ⴲⴻⵎⵒ[ⴲⵋⴳⵓ];
                  }
                }
              }
              break;
          }
        }
        var ⵂⴰⵀⵊ = 33;
        while (ⵂⴰⵀⵊ < 36) {
          switch (ⵂⴰⵀⵊ) {
            case 33:
              ⵂⴰⵀⵊ = ⴲⵋⵃⵒ ? 35 : 36;
              break;
            case 35:
              ⵂⴰⵀⵊ = 36;
              {
                var ⵂⵀⴵⵊ = 19;
                while (ⵂⵀⴵⵊ < 35) {
                  switch (ⵂⵀⴵⵊ) {
                    case 19:
                      ⵂⵀⴵⵊ = typeof ⴲⵋⵃⵒ != "object" || typeof ⴲⵋⵃⵒ == "object" && Array.isArray(ⴲⵋⵃⵒ) ? 18 : 35;
                      break;
                    case 18:
                      ⵂⵀⴵⵊ = 35;
                      throw Error("The value of \"envConfig\" must be object");
                  }
                }
                ⵂⴰⴰⵙ[ⴲⵛⵘⵔ] ||= {};
                ⵂⴰⴰⵙ[ⴲⵛⵘⵔ][ⵒⵕⴱⵒ] ||= {};
                ⵒⵕⵁⵏ = ⵒⴵⵗⴵⴱ.makeIterator(Object.entries(ⴲⵋⵃⵒ));
                var ⴲⵛⴸⵊ = 15;
                while (ⴲⵛⴸⵊ < 36) {
                  switch (ⴲⵛⴸⵊ) {
                    case 35:
                      ⴲⵛⴸⵊ = 13;
                      ⵂⵐⴺⵏ = ⵒⴵⴷⵏ.value;
                      ⵂⴰⴰⵏ = ⵒⴵⵗⴵⴱ.makeIterator(ⵂⵐⴺⵏ);
                      ⴲⵋⴳⵏ = ⵂⴰⴰⵏ.next().value;
                      ⴲⵛⵘⵎ = ⵂⴰⴰⵏ.next().value;
                      if (ⵂⴰⴰⵙ[ⴲⵛⵘⵔ][ⵒⵕⴱⵒ][ⴲⵋⴳⵏ]) {
                        ⵒⵅⵜⵎ = ⵂⵀⵕⵘ(ⵒⵕⵁⵑ, "utf-8").replace(ⴲⵛⵘⵎ, ⵂⴰⴰⵙ[ⴲⵛⵘⵔ][ⵒⵕⴱⵒ][ⴲⵋⴳⵏ]);
                        ⴲⵛⵘⵘ(ⵒⵕⵁⵑ, ⵒⵅⵜⵎ);
                      } else {
                        ⵂⴰⴰⵙ[ⴲⵛⵘⵔ][ⵒⵕⴱⵒ][ⴲⵋⴳⵏ] = ⴲⵛⵘⵎ;
                      }
                      break;
                    case 15:
                      ⴲⵛⴸⵊ = 33;
                      ⵒⴵⴷⵏ = ⵒⵕⵁⵏ.next();
                      break;
                    case 13:
                      ⴲⵛⴸⵊ = 33;
                      ⵒⴵⴷⵏ = ⵒⵕⵁⵏ.next();
                      break;
                    case 33:
                      ⴲⵛⴸⵊ = !ⵒⴵⴷⵏ.done ? 35 : 36;
                      break;
                  }
                }
              }
              break;
          }
        }
        var ⵒⴵⴷⵋ = 16;
        while (ⵒⴵⴷⵋ < 32) {
          switch (ⵒⴵⴷⵋ) {
            case 16:
              ⵒⴵⴷⵋ = !ⵒⵅⵜⵒ ? 27 : 32;
              break;
            case 27:
              ⵒⴵⴷⵋ = 32;
              {
                ⵒⴵⵇⵐ.jumpTo(26);
                ⵒⴵⴷⵋ = 33;
              }
              break;
          }
        }
        if (ⵒⴵⴷⵋ === 33) {
          break;
        }
        var ⵂⵐⴺⵋ = 33;
        while (ⵂⵐⴺⵋ < 36) {
          switch (ⵂⵐⴺⵋ) {
            case 33:
              ⵂⵐⴺⵋ = typeof ⵒⵅⵜⵒ != "function" ? 35 : 36;
              break;
            case 35:
              ⵂⵐⴺⵋ = 36;
              throw Error("The value of \"onLoad\" must be function");
          }
        }
        return ⵒⴵⵇⵐ.yield(ⵒⵅⵜⵒ({
          api: ⵒⴵⴷⵗ,
          threadModel: ⵂⵐⴺⵗ,
          userModel: ⴲⵛⴸⵘ,
          dashBoardModel: ⵒⵅⴼⵘ,
          globalModel: ⵒⵕⴱⵘ,
          threadsData: ⵂⵀⴵⵘ,
          usersData: ⵂⵐⵚⵗ,
          dashBoardData: ⴲⴻⵞⵗ,
          globalData: ⴲⵋⵓⵗ
        }), 26);
      case 26:
        if (ⴲⵛⵘⵒ) {
          ⵒⴵⴷⵙ.onChat.push(ⵒⵕⴱⵒ);
        }
        if (ⵂⵐⵚⵑ) {
          ⵒⴵⴷⵙ.onFirstChat.push({
            commandName: ⵒⵕⴱⵒ,
            threadIDsChattedFirstTime: []
          });
        }
        if (ⵒⵕⵑⵒ) {
          ⵒⴵⴷⵙ.onEvent.push(ⵒⵕⴱⵒ);
        }
        if (ⵂⵀⵕⵒ) {
          ⵒⴵⴷⵙ.onAnyEvent.push(ⵒⵕⴱⵒ);
        }
        ⵒⴵⴷⵙ[ⵂⵀⵕⵔ].set(ⵒⵕⴱⵒ.toLowerCase(), ⴲⵛⴸⵒ);
        ⵂⴰⵐⵑ++;
        ⵂⵐⵚⵏ = ⵒⵅⵌⵑ;
        return ⵒⴵⵇⵐ.yield(ⵒⵅⴼⵖ(ⵂⴰⵐⵕ.folderModules, ⵒⵅⵌⵑ.file$jscomp$1, ⵂⵀⵅⵑ), 28);
      case 28:
        ⵂⵐⵚⵏ.resultCompare = ⵒⴵⵇⵐ.yieldResult;
        if (ⵒⵅⵌⵑ.resultCompare !== true) {
          ⴲⴻⵞⵏ = ⵂⵀⵅⵕ.findIndex(function (ⵂⴰⴰⵋ) {
            return function (ⴲⵋⴳⵋ) {
              return ⴲⵋⴳⵋ.reason == ⵂⴰⴰⵋ.resultCompare;
            };
          }(ⵒⵅⵌⵑ));
          if (ⴲⴻⵞⵏ == -1) {
            ⵂⵀⵅⵕ.push({
              reason: ⵒⵅⵌⵑ.resultCompare,
              files: [ⵒⵅⵌⵑ.file$jscomp$1]
            });
          } else {
            ⵂⵀⵅⵕ[ⴲⴻⵞⵏ].files.push(ⵒⵅⵌⵑ.file$jscomp$1);
          }
        }
        global.GoatBot[ⵂⴰⵐⵕ.folderModules == "cmds" ? "commandFilesPath" : "eventCommandsFilesPath"].push({
          filePath: ⵒⵕⵑⵘ.normalize(ⵒⵕⵁⵑ),
          commandName: [ⵒⵕⴱⵒ].concat(ⵒⴵⵗⴵⴱ.arrayFromIterable(ⴲⵛⵈⵓ))
        });
        ⵒⴵⵇⵐ.leaveTryBlock(16);
        break;
      case 15:
        ⴲⵋⵓⵏ = ⵒⴵⵇⵐ.enterCatchBlock();
        ⵒⵕⵁⵕ.push({
          name: ⵒⵅⵌⵑ.file$jscomp$1,
          error: ⴲⵋⵓⵏ
        });
      case 16:
        ⵒⵕⵁⵙ.info("LOADED", "" + ⵂⵐⴺⵙ.green("" + ⵂⴰⵐⵑ) + (ⵒⵕⵁⵕ.length ? ", " + ⵂⵐⴺⵙ.red("" + ⵒⵕⵁⵕ.length) : "") + (ⵂⵀⵅⵕ.length ? ", " + ⵂⵐⴺⵙ.yellow("" + ⵂⵀⵅⵕ.reduce(function (ⴲⵛⵘⵊ, ⵒⵅⵜⵊ) {
          return ⴲⵛⵘⵊ + ⵒⵅⵜⵊ.files.length;
        }, 0)) : ""));
        ⵒⵅⵌⵑ = {
          file$jscomp$1: ⵒⵅⵌⵑ.file$jscomp$1,
          resultCompare: ⵒⵅⵌⵑ.resultCompare
        };
        ⴲⵛⵈⵑ = ⴲⵋⵓⵑ.next();
        ⵒⴵⵇⵐ.jumpTo(12);
        break;
      case 14:
        console.log("\r");
        var ⵒⵕⵑⵊ = 12;
        while (ⵒⵕⵑⵊ < 36) {
          switch (ⵒⵕⵑⵊ) {
            case 15:
              ⵒⵕⵑⵊ = 36;
              var ⵂⵀⵕⵊ = 27;
              while (ⵂⵀⵕⵊ < 32) {
                switch (ⵂⵀⵕⵊ) {
                  case 17:
                    ⵂⵀⵕⵊ = !ⵒⵅⵌⵏ.done ? 31 : 32;
                    break;
                  case 12:
                    ⵂⵀⵕⵊ = 17;
                    ⵒⵅⵌⵏ = ⵒⴵⵗⵏ.next();
                    break;
                  case 31:
                    ⵂⵀⵕⵊ = 12;
                    ⵂⴰⵐⵏ = ⵒⵅⵌⵏ.value;
                    console.log(" " + ⵂⵐⴺⵙ.red("✖ " + ⵂⴰⵐⵏ.name) + ": " + ⵂⴰⵐⵏ.error.message + "\n", ⵂⴰⵐⵏ.error);
                    break;
                  case 27:
                    ⵂⵀⵕⵊ = 17;
                    ⴲⵋⵃⵘ.err("LOADED", ⵂⵀⵅⵙ("loadScripts", "loadScriptsError", ⵂⵐⴺⵙ.yellow(ⵂⴰⴰⵕ)));
                    ⵒⴵⵗⵏ = ⵒⴵⵗⴵⴱ.makeIterator(ⵒⵕⵁⵕ);
                    ⵒⵅⵌⵏ = ⵒⴵⵗⵏ.next();
                    break;
                }
              }
              break;
            case 12:
              ⵒⵕⵑⵊ = ⵒⵕⵁⵕ.length > 0 ? 15 : 36;
              break;
          }
        }
        var ⴲⵋⵓⵋ = 17;
        while (ⴲⵋⵓⵋ < 32) {
          switch (ⴲⵋⵓⵋ) {
            case 31:
              ⴲⵋⵓⵋ = 32;
              var ⵒⴵⵗⵋ = 18;
              while (ⵒⴵⵗⵋ < 35) {
                switch (ⵒⴵⵗⵋ) {
                  case 34:
                    ⵒⴵⵗⵋ = !ⵒⵅⵌⵏ.done ? 10 : 35;
                    break;
                  case 18:
                    ⵒⴵⵗⵋ = 34;
                    if (ⵒⵕⵁⵕ.length > 0) {
                      console.log("\r");
                    }
                    ⴲⵋⵃⵘ.warn("LOADED", ⵂⵀⵅⵙ("loadScripts", "loadScriptsNotMatchOrigin", ⵂⵐⴺⵙ.yellow(ⵂⴰⴰⵕ)));
                    ⵂⵀⵅⵏ = ⵒⴵⵗⴵⴱ.makeIterator(ⵂⵀⵅⵕ);
                    ⵒⵅⵌⵏ = ⵂⵀⵅⵏ.next();
                    break;
                  case 10:
                    ⵒⴵⵗⵋ = 24;
                    ⴲⵛⵈⵏ = ⵒⵅⵌⵏ.value;
                    console.log(" " + ⵂⵐⴺⵙ.yellow("! " + ⵂⵀⵅⵙ("loadScripts", ⴲⵛⵈⵏ.reason)) + " " + ⴲⵛⵈⵏ.files.join(", "));
                    break;
                  case 24:
                    ⵒⴵⵗⵋ = 34;
                    ⵒⵅⵌⵏ = ⵂⵀⵅⵏ.next();
                    break;
                }
              }
              break;
            case 17:
              ⴲⵋⵓⵋ = ⵂⵀⵅⵕ.length > 0 ? 31 : 32;
              break;
          }
        }
        ⵂⴰⵐⵕ = {
          folderModules: ⵂⴰⵐⵕ.folderModules
        };
        ⵂⵐⵚⵕ = ⵒⴵⵗⵕ.next();
        ⵒⴵⵇⵐ.jumpTo(9);
    }
  });
};
